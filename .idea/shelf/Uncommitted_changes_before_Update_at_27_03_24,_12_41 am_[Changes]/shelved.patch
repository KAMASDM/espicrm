Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"aff46729-7727-4a9c-b36b-299ee3c94569\" name=\"Changes\" comment=\"Second Major Push with list displays, filters, Fieldsets and other functionalities.\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\n  \"lastFilter\": {\n    \"state\": \"OPEN\",\n    \"assignee\": \"anantsoftcomputin\"\n  }\n}]]></component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"517b0776-af51-4339-a2c8-8c89b3b254a5\" />\n        <option name=\"url\" value=\"https://github.com/anantsoftcomputin/espi-django.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"customColor\": \"\",\n  \"associatedIndex\": 5\n}]]></component>\n  <component name=\"ProjectId\" id=\"2dsRYbjCliSBtUfplhWIILErsU6\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"git-widget-placeholder\": \"main\"\n  }\n}]]></component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-python-sdk-50da183f06c8-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13135.95\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"aff46729-7727-4a9c-b36b-299ee3c94569\" name=\"Changes\" comment=\"\" />\n      <created>1710794850006</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710794850006</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"First Push\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710931510065</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710931510065</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Second Major Push with list displays, filters, Fieldsets and other functionalities.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1711110983878</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1711110983878</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Second Major Push with list displays, filters, Fieldsets and other functionalities.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1711466815770</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1711466815770</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\n    <MESSAGE value=\"added Front Folder\" />\n    <MESSAGE value=\"First Push\" />\n    <MESSAGE value=\"Second Major Push with list displays, filters, Fieldsets and other functionalities.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Second Major Push with list displays, filters, Fieldsets and other functionalities.\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/.idea/workspace.xml	(date 1711479129011)
@@ -4,7 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="aff46729-7727-4a9c-b36b-299ee3c94569" name="Changes" comment="Second Major Push with list displays, filters, Fieldsets and other functionalities." />
+    <list default="true" id="aff46729-7727-4a9c-b36b-299ee3c94569" name="Changes" comment="Second Major Push with list displays, filters, Fieldsets and other functionalities.">
+      <change afterPath="$PROJECT_DIR$/DetailEnquiry/serializers.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Enquiry/charts.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Enquiry/schema.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Enquiry/serializers.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DetailEnquiry/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/DetailEnquiry/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Enquiry/admin.py" beforeDir="false" afterPath="$PROJECT_DIR$/Enquiry/admin.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Enquiry/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/Enquiry/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Enquiry/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/Enquiry/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/settings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -18,6 +31,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PREVIOUS_COMMIT_AUTHORS">
+      <list>
+        <option value="ASC &lt;anantsoftcomputing@gmail.com&gt;" />
+      </list>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitHubPullRequestSearchHistory"><![CDATA[{
@@ -42,7 +60,9 @@
   "associatedIndex": 5
 }]]></component>
   <component name="ProjectId" id="2dsRYbjCliSBtUfplhWIILErsU6" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -94,7 +114,23 @@
       <option name="project" value="LOCAL" />
       <updated>1711466815770</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="Second Major Push with list displays, filters, Fieldsets and other functionalities.">
+      <option name="closed" value="true" />
+      <created>1711466912068</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1711466912068</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Second Major Push with list displays, filters, Fieldsets and other functionalities.">
+      <option name="closed" value="true" />
+      <created>1711466995512</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1711466995512</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: Enquiry/schema.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/schema.py b/Enquiry/schema.py
new file mode 100644
--- /dev/null	(date 1711477021800)
+++ b/Enquiry/schema.py	(date 1711477021800)
@@ -0,0 +1,2 @@
+
+
Index: DetailEnquiry/serializers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DetailEnquiry/serializers.py b/DetailEnquiry/serializers.py
new file mode 100644
--- /dev/null	(date 1711478825285)
+++ b/DetailEnquiry/serializers.py	(date 1711478825285)
@@ -0,0 +1,26 @@
+# In your app's serializers.py file
+from rest_framework import serializers
+from .models import Detail_Enquiry, Edu_Level, Work_Experience,enquiry #... and other foreign key models if needed
+
+# Create serializers for any related foreign key models you might want to include
+class EduLevelSerializer(serializers.ModelSerializer):
+    class Meta:
+        model = Edu_Level
+        fields = '__all__'
+
+class WorkExperienceSerializer(serializers.ModelSerializer):
+    class Meta:
+        model = Work_Experience
+        fields = '__all__'
+
+# ... Serializers for other related models
+
+class DetailEnquirySerializer(serializers.ModelSerializer):
+    Current_Enquiry = serializers.PrimaryKeyRelatedField(queryset=enquiry.objects.all())
+    level = EduLevelSerializer(required=False)  # Using nested serializer
+    Work_Experience = WorkExperienceSerializer(required=False)
+    # ... Include other foreign keys similarly
+
+    class Meta:
+        model = Detail_Enquiry
+        fields = '__all__'
Index: DetailEnquiry/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\n\n# Create your views here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DetailEnquiry/views.py b/DetailEnquiry/views.py
--- a/DetailEnquiry/views.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/DetailEnquiry/views.py	(date 1711479388639)
@@ -1,3 +1,11 @@
-from django.shortcuts import render
+# In your app's views.py file
+# Enquiry/views.py
+from .models import Detail_Enquiry
+from .serializers import DetailEnquirySerializer
+from rest_framework import viewsets
+
+class DetailEnquiryViewSet(viewsets.ModelViewSet):
+     queryset = Detail_Enquiry.objects.all()
+     serializer_class = DetailEnquirySerializer
 
-# Create your views here.
+
Index: Enquiry/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\nfrom .models import enquiry\n\n\n# Register your models here.\nclass EnquiryList(admin.ModelAdmin):\n    fieldsets = (\n        (\"Student Info\", {\"fields\": (\"student_First_Name\", \"student_Last_Name\", \"student_passport\")}),\n        (\"Contact Info\", {\"fields\": (\n            \"student_phone\", \"alternate_phone\", \"student_email\", \"student_address\", \"student_country\", \"student_state\",\n            \"student_city\", \"student_zip\")}),\n        (\"Education Info\", {\"fields\": (\"current_education\",)}),\n        (\"Enquiry Info\", {\"fields\": (\n            \"country_interested\", \"university_interested\",\"level_applying_for\", \"course_interested\",\n            \"intake_interested\")}),\n        (\"For Counsellor\", {\"fields\": (\"assigned_users\", \"enquiry_status\", \"notes\")}),\n    )\n    jazzmin_section_order = (\"Student Info\", \"Contact Info\", \"Education Info\", \"Enquiry Info\", \"For Counsellor\")\n\n    list_display = (\n        'student_First_Name', 'student_Last_Name', 'student_phone', 'student_email', 'country_interested',\n        'university_interested',\n        'course_interested', 'level_applying_for', 'intake_interested',\n        'assigned_users', 'enquiry_status','notes', )\n\n    list_filter = (\n        'student_First_Name', 'student_phone', 'student_email', 'current_education',\n        'university_interested', 'course_interested', 'assigned_users', 'enquiry_status',)\n\n    list_display_links = ('student_First_Name',)\n    list_per_page = 10\n\n    search_fields = ('student_First_Name', 'student_Last_Name', 'student_phone', 'student_email', 'current_education',\n                     'country_interested',\n                     'university_interested',\n                     'course_interested', 'level_applying_for', 'intake_interested',\n                     'assigned_users', 'enquiry_status',)\n\n\nadmin.site.register(enquiry, EnquiryList)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/admin.py b/Enquiry/admin.py
--- a/Enquiry/admin.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/Enquiry/admin.py	(date 1711478401734)
@@ -1,8 +1,16 @@
 from django.contrib import admin
-from .models import enquiry
+
+from .models import enquiry, enquiry_status
+
+
 
 
 # Register your models here.
+
+
+
+
+
 class EnquiryList(admin.ModelAdmin):
     fieldsets = (
         ("Student Info", {"fields": ("student_First_Name", "student_Last_Name", "student_passport")}),
@@ -17,12 +25,14 @@
     )
     jazzmin_section_order = ("Student Info", "Contact Info", "Education Info", "Enquiry Info", "For Counsellor")
 
+    actions = ['update_enquiry_status']
     list_display = (
         'student_First_Name', 'student_Last_Name', 'student_phone', 'student_email', 'country_interested',
         'university_interested',
         'course_interested', 'level_applying_for', 'intake_interested',
         'assigned_users', 'enquiry_status','notes', )
 
+
     list_filter = (
         'student_First_Name', 'student_phone', 'student_email', 'current_education',
         'university_interested', 'course_interested', 'assigned_users', 'enquiry_status',)
@@ -36,5 +46,13 @@
                      'course_interested', 'level_applying_for', 'intake_interested',
                      'assigned_users', 'enquiry_status',)
 
+    def update_enquiry_status(modeladmin, request, queryset):
+        processed_status = enquiry_status.objects.get(status='Processed')
+        queryset.update(enquiry_status=processed_status)
+    update_enquiry_status.short_description = "Update status to Processed"
+
 
 admin.site.register(enquiry, EnquiryList)
+
+
+
Index: Enquiry/charts.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/charts.py b/Enquiry/charts.py
new file mode 100644
--- /dev/null	(date 1711474760320)
+++ b/Enquiry/charts.py	(date 1711474760320)
@@ -0,0 +1,20 @@
+from admin_charts.dashboards import AdminDashboard
+from admin_charts.charts import AdminChart
+from django.db.models.functions import TruncMonth
+from django.db.models import Count
+from .models import enquiry
+
+class EnquiryByMonthChart(AdminChart):
+    title = 'Enquiries by Month'
+    model = enquiry
+    chart_type = 'line'
+    date_field = 'date_created'  # Assuming your Enquiry model has a date_created field
+
+    def get_aggregate_data(self):
+        return self.model.objects.annotate(date=TruncMonth(self.date_field)).values('date').annotate(y=Count('id')).order_by('date')
+
+class MyDashboard(AdminDashboard):
+    title = 'My Dashboard'
+    charts = [
+        EnquiryByMonthChart(),
+    ]
Index: core/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for core project.\n\nGenerated by 'django-admin startproject' using Django 4.2.9.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-&ag*6^8&$x@%^7diq$6jo-y-u^0%=2z0d8dpsv)^tzi_9#ot79'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'Master',\n    'Enquiry',\n    'Assessment',\n    'Application',\n    'DetailEnquiry',\n    'jazzmin',\n    'graphene_django',\n    'import_export',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'core.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'core.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"ESPI-CRM\",\n\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"ESPI-CRM\",\n\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"ESPI-CRM\",\n\n    # Logo to use for your site, must be present in static files, used for brand on top left\n   # \"site_logo\": \"https://espiconsultants.com/wp-content/uploads/2022/10/ESPI-X6-Version_02-1.png\",\n\n    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)\n    \"login_logo\": None,\n\n    # Logo to use for login form in dark themes (defaults to login_logo)\n    \"login_logo_dark\": None,\n\n    # CSS classes that are applied to the logo above\n    #\"site_logo_classes\": \"img-circle\",\n\n    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)\n    \"site_icon\": None,\n\n    # Welcome text on the login screen\n    \"welcome_sign\": \"Welcome to ESPI-CRM\",\n\n    # Copyright on the footer\n    \"copyright\": \"ANANT SOFT COMPUTING\",\n\n    # List of model admins to search from the search bar, search bar omitted if excluded\n    # If you want to use a single search field you dont need to use a list, you can use a simple string\n    \"search_model\": [\"auth.User\", \"auth.Group\",],\n\n    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user\n    \"user_avatar\": None,\n\n    ############\n    # Top Menu #\n    ############\n\n    # Links to put along the top menu\n    \"topmenu_links\": [\n\n      {\"name\": \"Home\",  \"url\": \"admin:index\", \"permissions\": [\"auth.view_user\"]},\n\n    ],\n\n    # Other Jazzmin settings...\n\n\n    #############\n    # User Menu #\n    #############\n\n    # Additional links to include in the user menu on the top right (\"app\" url type is not allowed)\n    \"usermenu_links\": [\n        {\"name\": \"ESPI\", \"url\": \"https://espiconsultants.com/\", \"new_window\": True},\n        {\"model\": \"auth.user\"}\n    ],\n\n    #############\n    # Side Menu #\n    #############\n\n    # Whether to display the side menu\n    \"show_sidebar\": True,\n\n    # Whether to aut expand the menu\n    \"navigation_expanded\": True,\n\n    # Hide these apps when generating side menu e.g (auth)\n    \"hide_apps\": [],\n\n    # Hide these models when generating side menu (e.g auth.user)\n    \"hide_models\": [],\n\n    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)\n   # \"order_with_respect_to\": [\"auth\", \"books\", \"books.author\", \"books.book\"],\n\n    # Custom links to append to app groups, keyed on app name\n\n\n    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2\n    # for the full list of 5.13.0 free icon classes\n    \"icons\": {\n        \"auth\": \"fas fa-users-cog\",\n        \"auth.user\": \"fas fa-user\",\n        \"auth.Group\": \"fas fa-users\",\n    },\n    # Icons that are used when one is not manually specified\n    \"default_icon_parents\": \"fas fa-chevron-circle-right\",\n    \"default_icon_children\": \"fas fa-circle\",\n\n    #################\n    # Related Modal #\n    #################\n    # Use modals instead of popups\n    \"related_modal_active\": True,\n\n    #############\n    # UI Tweaks #\n    #############\n    # Relative paths to custom CSS/JS scripts (must be present in static files)\n    \"custom_css\": None,\n    \"custom_js\": None,\n    # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)\n    \"use_google_fonts_cdn\": True,\n    # Whether to show the UI customizer on the sidebar\n    \"show_ui_builder\": False,\n\n    ###############\n    # Change view #\n    ###############\n    # Render out the change view as a single form, or in tabs, current options are\n    # - single\n    # - horizontal_tabs (default)\n    # - vertical_tabs\n    # - collapsible\n    # - carousel\n    \"changeform_format\": \"horizontal_tabs\",\n    # override change forms on a per modeladmin basis\n    \"changeform_format_overrides\": {\"auth.user\": \"collapsible\", \"auth.group\": \"vertical_tabs\"},\n    # Add a language dropdown into the admin\n   # \"language_chooser\": True,\n}\n\nJAZZMIN_UI_TWEAKS = {\n    \"navbar_small_text\": False,\n    \"footer_small_text\": False,\n    \"body_small_text\": True,\n    \"brand_small_text\": False,\n    \"brand_colour\": \"navbar-pink\",\n    \"accent\": \"accent-lime\",\n    \"navbar\": \"navbar-dark\",\n    \"no_navbar_border\": False,\n    \"navbar_fixed\": False,\n    \"layout_boxed\": False,\n    \"footer_fixed\": False,\n    \"sidebar_fixed\": True,\n    \"sidebar\": \"sidebar-dark-primary\",\n    \"sidebar_nav_small_text\": False,\n    \"sidebar_disable_expand\": False,\n    \"sidebar_nav_child_indent\": False,\n    \"sidebar_nav_compact_style\": False,\n    \"sidebar_nav_legacy_style\": False,\n    \"sidebar_nav_flat_style\": False,\n    \"theme\": \"darkly\",\n    \"dark_mode_theme\": \"darkly\",\n    \"button_classes\": {\n        \"primary\": \"btn-outline-primary\",\n        \"secondary\": \"btn-outline-secondary\",\n        \"info\": \"btn-outline-info\",\n        \"warning\": \"btn-warning\",\n        \"danger\": \"btn-danger\",\n        \"success\": \"btn-success\"\n    }\n}\n\n\n\n\n\n\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/settings.py b/core/settings.py
--- a/core/settings.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/core/settings.py	(date 1711478380047)
@@ -39,6 +39,7 @@
     'jazzmin',
     'graphene_django',
     'import_export',
+    'rest_framework',
     'django.contrib.admin',
     'django.contrib.auth',
     'django.contrib.contenttypes',
@@ -122,7 +123,8 @@
 
     # List of model admins to search from the search bar, search bar omitted if excluded
     # If you want to use a single search field you dont need to use a list, you can use a simple string
-    "search_model": ["auth.User", "auth.Group",],
+    #"search_model": ["auth.User", "auth.Group",],
+   #"search_model": "Enquiry.enquiry",
 
     # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
     "user_avatar": None,
@@ -136,6 +138,34 @@
 
       {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},
 
+      {
+            "name": "Enquiry",
+            "app": "Enquiry",
+            "model": "enquiry",
+            "url": "/admin/Enquiry/enquiry/",
+        },
+
+      {
+            "name": "DetailEnquiry",
+            "app": "DetailEnquiry",
+            "model": "Detail_Enquiry",
+            "url": "/admin/DetailEnquiry/detail_enquiry/",
+        },
+
+     {
+            "name": "Assessments",
+            "app": "Assessment",
+            "model": "assessment",
+            "url": "/admin/Assessment/assessment/",
+        },
+
+    {
+            "name": "Application",
+            "app": "Application",
+            "model": "Application",
+            "url": "/admin/Application/application/",
+        },
+
     ],
 
     # Other Jazzmin settings...
Index: Enquiry/serializers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/serializers.py b/Enquiry/serializers.py
new file mode 100644
--- /dev/null	(date 1711478225988)
+++ b/Enquiry/serializers.py	(date 1711478225988)
@@ -0,0 +1,15 @@
+from rest_framework import serializers
+from .models import enquiry
+from django.contrib.auth import get_user_model
+
+# Import models from other apps if needed
+
+class EnquirySerializer(serializers.ModelSerializer):
+    assigned_users = serializers.PrimaryKeyRelatedField(queryset=get_user_model().objects.all())
+    country_interested = serializers.CharField(source='country_interested.name')  # Assuming your Country model has a 'name' field.
+
+    # ... Do the same for other ForeignKey fields ...
+
+    class Meta:
+        model = enquiry
+        fields = '__all__'  # Include all fields
Index: Enquiry/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\n\n# Create your views here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/views.py b/Enquiry/views.py
--- a/Enquiry/views.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/Enquiry/views.py	(date 1711478225985)
@@ -1,3 +1,10 @@
-from django.shortcuts import render
+from rest_framework import viewsets
+from .models import enquiry
+from .serializers import EnquirySerializer
+
+class EnquiryViewSet(viewsets.ModelViewSet):
+    queryset = enquiry.objects.all()
+    serializer_class = EnquirySerializer
 
-# Create your views here.
+
+
Index: core/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nURL configuration for core project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path\nfrom graphene_django.views import GraphQLView\nfrom Master.schema import schema\n\nurlpatterns = [\n    path(\"graphql/\", GraphQLView.as_view(graphiql=True, schema=schema)),\n    path('admin/', admin.site.urls),\n]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/urls.py b/core/urls.py
--- a/core/urls.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/core/urls.py	(date 1711479528360)
@@ -15,11 +15,17 @@
     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
 """
 from django.contrib import admin
-from django.urls import path
+from django.urls import path, include
 from graphene_django.views import GraphQLView
 from Master.schema import schema
+from rest_framework import routers
+from Enquiry import views
+
+router = routers.DefaultRouter()
+router.register(r'enquiries', views.EnquiryViewSet)
 
 urlpatterns = [
     path("graphql/", GraphQLView.as_view(graphiql=True, schema=schema)),
     path('admin/', admin.site.urls),
+    path('api/', include(router.urls)),
 ]
Index: Enquiry/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\n\n# Create your models here.\nfrom Master.models import course_levels, intake, current_education, enquiry_status, Course, university\nfrom django.contrib.auth import get_user_model\nfrom django_countries.fields import CountryField\n\n\n# Create your models here.\nclass enquiry(models.Model):\n    # Personal Info\n    student_First_Name = models.CharField(max_length=100)\n    student_Last_Name = models.CharField(max_length=100)\n    student_passport = models.CharField(max_length=100)\n\n    # Contact Info\n    student_phone = models.CharField(max_length=10)\n    alternate_phone = models.CharField(max_length=10)\n    student_email = models.EmailField()\n    student_address = models.TextField()\n    student_country = CountryField(blank_label=\"(select country)\")\n    student_state = models.CharField(max_length=100)\n    student_city = models.CharField(max_length=100)\n    student_zip = models.CharField(max_length=10)\n\n    # Education Info\n    current_education = models.ForeignKey(current_education, on_delete=models.CASCADE)\n\n    # Enquiry Info\n    country_interested = CountryField()\n    university_interested = models.ForeignKey(university, on_delete=models.CASCADE)\n    course_interested = models.ForeignKey(Course, on_delete=models.CASCADE)\n    level_applying_for = models.ForeignKey(course_levels, on_delete=models.CASCADE)\n    intake_interested = models.ForeignKey(intake, on_delete=models.CASCADE)\n\n\n    # For Counsellor\n    assigned_users = models.ForeignKey(get_user_model(), on_delete=models.CASCADE, default=\"\")\n    enquiry_status = models.ForeignKey(enquiry_status, on_delete=models.CASCADE)\n    notes = models.TextField()\n\n    def __str__(self):\n        return (f\"{self.student_First_Name} - {self.country_interested} - {self.university_interested} - {self.course_interested} - {self.level_applying_for} \"\n                f\"- {self.intake_interested}\")\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Enquiry/models.py b/Enquiry/models.py
--- a/Enquiry/models.py	(revision 0d1830779d13cf44343b6866639537a261e4e8ee)
+++ b/Enquiry/models.py	(date 1711468726539)
@@ -43,3 +43,4 @@
         return (f"{self.student_First_Name} - {self.country_interested} - {self.university_interested} - {self.course_interested} - {self.level_applying_for} "
                 f"- {self.intake_interested}")
 
+
